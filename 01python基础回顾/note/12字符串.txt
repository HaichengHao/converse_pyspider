空字符串的创建
s=str()
1字符串的格式化
1 '{}'.format()方式
2.'%数据类型'%()
    %s 字符串占位符
    %d 站位整数
    %f 占位小数
3.fstring
    print(f'我叫{name},家住{address},今年{age}岁，兴趣{interest}')

2字符串的索引和切片
注意，[n1:n2:step]是前闭后开区间，n2是取不到的，只能取到n2-1个索引位置的元素
    索引可以利用[]取值法，按照索引位置来获取指定位置的元素
    切片:从一个字符串中提取一部分内容[start:stop:step]
3字符串的常用操作
    字符串的操作一般不会对原字符串产生影响，一般是返回新的字符串
    所以要进行接收，形成新的字符串对象
    1  .captialize()  <--首字母大写，其余小写
    2  .upper()  <--全大写
    3  .lower() <--全小写
    4  .title() <--将每个单词的首字母大写

4字符串的切割和替换
.strip()可以去除字符串左右的空白符，包含（空格， \t  \n 等）
.replace(oldstr,newstr,count)可以替换指定的旧字符串变为新的字符串，若指定次数则按指定的次数替换
.split()可以进行字符串的切割，可以指定用何种字符进行切割，返回的结果是一个列表

5字符串的查找和判断
.find()可以查找是否有指定的字符或字符串，如果有则匹配到第一个出现的位置，否则就返回'-1'表示不存在
    .rfind()从右边开始
    .lfind()从左开始
.index()可以忽略标号查找指定的字符串位置，但如果没有则会报错
使用最多的其实是in/not in ,可以作条件判断

判断
 .startwith('')  以什么什么开头，使用频率较高
 .endwith('') 以什么什么结尾
 .isdigit()判断是否为字符串数字整数
 .isdecimal()判断是否为字符串数字小数
 .isalnum()判断字符串是否只有数字
 .isalpha()判断是否都为字母
 .islower()判断是否都是小写
 .isupper()判断是否都是大写
 .istitle()判断所有单词的首字母是不是都为大写

6字符串的补充和总结
len(str)  可以返回str的长度
'指定的字符'.join(lst) 用指定的字符将字符串列表对象链接起来,不指定则默认无字符
如:lst=['hello', 'world', 'hi', 'python']
s='-'.join(lst)
print(s)
# > hello-world-hi-python

总结：
   1  f"{变量}" 格式化一个字符串
   2 索引和切片
        索引：从0开始的 []
        切片：s[start:end:step],左闭右开,只能取到end之前的那一个

   3 字符串是不可变的数据类型，对字符串的操作都是返回新的字符串
