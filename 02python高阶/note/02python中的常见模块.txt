python中的常见模块
todo:见others的02demo
time模块
   1 时间戳
        import time
        time.time()
        整数位是秒，从1970年1月1日至今的时间的秒数

   2 时间字符串
        time.strftime("%Y-%m-%d %H:%M:%S")
        time.strftime("%w %X")
        释意 %Y-%m-%d %H:%M:%S %w %X
            %Y 年
            %m 月
            %d 日
            %H 时
            %M 分
            %S 秒
            %w 周几
            %X 时分秒
   3 程序暂定固定的时间
   import time
   time.sleep(seconds)

random 模块
    import random
    1.random.random() 随机生成大于0小于1的小数
    2.random.randint(x,y) 随机生成大于等于x且小于等于y之间的整数
    3.random.randrange(x,y)  随机生成大于等于x且小于y之间的整数
    4.random.choice(lst_boj) 随机返回列表对象中的值
    5.random.sample(lst_boj,组合数) 随机返回列表元素中任意组合数个随机组合
    6.random.uniform(x,y) 随机生成大于x小于y的小数
    7.random.shuffle(lst_obj) 直接将原来的列表元素打乱次序，不会返回一个新的列表

os 模块
    import os
    1 os.getcwd() 获取当前工作目录，即当前python脚本工作的目录路径
    2 os.chdir('dir_name') 改变当前脚本工作目录；相当于shell下的cd (change directory)
    3 os.curdir 返回当前目录 (.)
    4 os.pardir 获取当前目录的父目录名 (..)
    5 os.makedirs('dirname_1/dirname_2')  生成多级目录
    6 os.mkdir('dirname') 创建文件夹  相当于shell 下的mkdir
    7 os.rmdir('dirname') 删除文件夹   相当于shell 下的rmdir
    8 os.listdir('dirname') 列出指定目录下的所有文件和子目录，包括隐藏文件
    9 os.remove() 删除一个文件
    10 os.rename('old_name','new_name') 重命名文件 / 目录
    11 os.stat('path/filename') 获取文件/目录名
    12 os.sep 输出操作系统指定的路径分隔符 win下为 \\ linux 下为 /
    13 os.linesep 输出当前平台使用的终止符 win 下为 \t\n linux 下为 \n
    14 os.pathsep 输出用于分割文件路径的字符串 win下为; linux下为:
    15 os.system('command') 实现终端命令
    16 os.path.split(path) 返回path规范化的绝对路径
    17 os.path.exist(path) 判断path是否存在

序列化模块 json
    import json
    序列化 : 将python中的字典，列表对象转换成制定形式字符串
     为什么需要序列化?答:在写入json数据的时候，会遇到如下问题
                    # with open('../others/demo.json', 'a+') as wfp:
                    #     try:
                    #         wfp.write(dic)
                    #     except BaseException as e:
                    #         print(e)
                    #         # write() argument must be str, not dict  <--捕获到异常，可写的文件只能是字符串，可这个是字典类型
     序列化:将python中的字典，列表对象转换成制定形式字符串
        1 json.dumps(非字符串对象)
        2 json.dump(字典对象,'指定的路径')
    反序列化: 将指定格式的字符串转换成字典，列表对象
        josn.loads(str)

正则模块 re （重点）
    什么是正则表达式?
    ·正则表达式(Regular Expression) 是一种文本模式，包括普通字符(例如,a到z
    之间的字母)和特殊字符(例如,*,+,?等)
    ·正则表达式使用单个字符串来描述、匹配一系列匹配某个句法规则的字符串

    · 常用方法
        1 re.findall(pattern,string)
            pattern 匹配规则
            string 待匹配的字符串
    ·常用正则标识
       单字符:
            . 除换行以外所有字符
            []  匹配集合中任意一个字符 eg: [aoe] [a-z]
            \d  数字 [0-9]
       数量修饰
            *  任意多次 >=0
            +  至少一次 >=1
            ?  可有可无 0次或1次
            {m}  固定m次
            {m,} 至少m次
            {m,n} m-n次
