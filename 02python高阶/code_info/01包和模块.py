# editor: 百年
# time: 2024/3/12 10:36
'''
先手简述
包是用来管理模块的，模块是用来管理代码的
模块介绍
在计算机程序开发的过程中，随着程序代码越写越多，在一个文件里代码就会越来越长，
越来越不容易维护
为了编写可维护的代码，我们把很多函数分组，分别放到不通的文件里，这样，每一个包含有的代码就
相对较少，很多编程语言都采用这种组织代码的方式，而这样的一个py文件在python中称为模块
模块式组织代码的更高级形式，大大提高了代码的阅读性和可维护性

模块一共四种
    解释器内置模块
    python标准库
    第三方模块
    应用程序自定义模块
    另外，使用模块还可以避免函数名和变量名冲突，相同名字阿德函数和变量完全可以分别存在

模块的导入
方式1
    import 模块名 as 别名
方式2
    import(
        模块1
        模块2
        )
方式3
    import 模块1,模块2

方式4:导入成员变量 注意，这样指定了要导入的成员变量后就只能使用指定的成员函数而不能使用全部函数
    from 模块名 import 成员变量
    from 模块名 import * (表示导入这个模块下的所有成员变量)
注意执行文件(main.py)一定不要和模块名称重名

关于 if __name__ == '__main__':
        pass
    其表示为当前的程序作为主程序运行
    __name__是python中的内置变量，存储的是当前模块名称
    对于很多编程语言来说，程序都必须要有一个入口，像c,c++都有一个main函数作为程序的入口
    而Python作为解释性脚本语言，没有一个统一的入口，因为Python程序运行时是从模块顶开始，
    逐行进行翻译执行，所以最顶层(没有被缩进)的代码都会被执行，所以Python中并不需要统一的main()作为程序的入口

'''
# todo: 演示的代码在other文件夹下的01demo中

'''
包:
什么是包
当一个项目中模块越来越多；维护和开发不是那么高效的时候，我们可以引入一种比模块更高级的语法:包
包是对相关功能的模块py文件的组织方式
包可以理解为文件夹，更准确的说，是一个包含__init__文件的文件夹

导入包的语法
1.import 包名[.模块名[as 别名]]
2.from 包名 import 模块名 [as 别名]
3.from 包名.模块名 import 成员名 [as 别名]

可以理解为包就是用来管理模块的 包>模块
如何创建包呢?在pycharm中直接创建 python package即可
注意，包里一定会带一个__init__.py的,还有就是这个包的位置一定要放到项目文件夹下
包里是自己写的模块.py这些.py里有自己定义的函数
'''
# todo:见others的02demo


