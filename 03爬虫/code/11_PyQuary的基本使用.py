# @Editor    : 百年
# @FileName  :PyQuary的基本使用.py
# @Time      :2024/7/7 16:34
from pyquery import PyQuery
import requests
import random

proxies_pool = [
    {'http': '114.231.46.79:8888'},
    {'http': '36.6.145.90:8089'},
    {'http': '117.69.233.98:8089'},
    {'http': '117.71.149.82:8089'},
    {'http': '117.71.154.81:8089'},
    {'http': '117.69.232.117:8089'},
    {'http': '117.69.154.91:41122'},
    {'http': '114.106.172.19:8089'},
    {'http': '123.182.59.184:8089'},
    {'http': '123.182.59.34:8089'},
    {'http': '36.6.144.104:8089'},
    {'http': '183.165.250.45:8089'},
    {'http': '121.230.211.163:8089'},
    {'http': '36.6.144.77:8089'},
    {'http': '223.215.177.245:8089'},
    {'http': '121.40.137.141:80'},
    {'http': '43.243.234.21:8000'},
    {'http': '60.174.0.61:8089'},
    {'http': '47.95.10.74:8888'},
    {'http': '117.71.154.177:8089'},
    {'http': '120.78.194.53:8888'},
    {'http': '111.224.10.69:8089'},
    {'http': '111.225.153.196:8089'},
    {'http': '112.17.16.199:80'},
    {'http': '36.6.145.167:8089'},
    {'http': '111.225.153.115:8089'},
    {'http': '112.17.16.213:80'},
    {'http': '114.231.45.194:8888'},
    {'http': '117.69.233.126:8089'},
    {'http': '117.69.237.184:8089'},
    {'http': '113.121.39.175:9999'},
    {'http': '121.43.102.172:80'},
    {'http': '114.232.109.246:8089'},
    {'http': '182.34.21.33:9999'},
    {'http': '117.69.232.202:8089'},
    {'http': '120.55.13.197:80'},
    {'http': '117.71.149.36:8089'},
    {'http': '121.40.103.179:80'},
    {'http': '112.17.16.156:80'}

]
proxies = random.choice(proxies_pool)
url = 'https://www.zbj.com/'
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36'
}
response = requests.get(url=url, headers=headers, proxies=proxies)
response.encoding = response.apparent_encoding
content = response.text

# 1创建自定义的对象，调用PyQuary预加载解析html数据
pq = PyQuery(content)
print(type(pq))
# <class 'pyquery.pyquery.PyQuery'> <--其返回值类型并不是字符串类型，而是PyQuary类型的

# 2得到想要的数据只需要用自己创建的对象+(css选择器)即可
title = pq("div.bottom div.name")
'''内容就不粘贴了'''

# print(type(title))
# <class 'pyquery.pyquery.PyQuery'> <-- 依然是PyQuery类型
# 所以我们可以进一步的利用仍然是该类型的结果进一步进行解析，即链式操作
# 找到所有img对象
img = title("img")
# 也可以这样写 img = pq("div.bottom div.name")("img"),和上面一行的写法是相同的效果，不过这样写起来可读性差
# print(img)

# 提取标签中的属性,获取img中的链接(注意，这样只能提取第一个)
# img_url=img.attr("src")
# print(img_url)
# https://bgl.zbjimg.com/bgl/bjclound/2024/05/31/20240531.png/origine/70f51cf0-3d9b-4b82-8746-6b1eea19e4ce

# 提取title中的文本
# print(title.text())

''' 这个倒是会获取多个
商标专享注册 商标优享注册 商标畅享注册 商标注册+设计优越版 商标注册+设计尊享版 外观专利专享申请 实用新型专享申请 实用新型无忧申请 发明专利专享申请 发明专利无忧申请 版权普通登记 版权加急登记 国家版权普通登记 国家版权加急登记 软件著作权专享登记 商标变更 商标续展 商标转让 商标注销 商标许可备案 商标驳回复审 无忧驳回复审 商标异议申请 商标异议答辩 商标无效宣告 有限公司注册 香港公司服务 美国公司注册 个体工商注册 有限合伙注册 公司注销 注册资本变更 银行变更 同区地址变更 经营范围变更 代账1个月体验 小规模代理记账 代理记账2年送1年 经营账外包 发票查验 商品条形码 进出口权 食品经营许可证 ICP许可证 人力资源服务许可证 自然人代开 合规解决企业无票支出 注册公司享地方补贴 重点人群补贴 退役士兵补贴 社保补贴 岗位补贴 高企认定 专精特新企业认定 研发费用加计扣除 ISO9001质量管理体系认证 ISO14001环境管理体系认证 ISO45001职业健康安全管理体系认证 ISO22000食品安全管理体系认证 两化融合贯标 双软评估认定 食品经营许可证 人力资源服务许可证 淘宝短视频制作 企业品牌宣传片制作 短视频脚本策划 短剧制作 新媒体账号代运营 微信代运营 微信代运营公众号推文长图文 短视频代运营 淘宝天猫京东拼多多代运营 淘宝短视频制作 抖音小店代运营 详情页设计电商产品文案 直播代播 抖音团购达人探店 微信社群运营 短视频脚本策划 企业品牌logo设计 品牌VI设计 LOGO设计企业品牌商标设计 logo标志IP形象吉祥物表情包 公司品牌LOGO升级 品牌包装设计食品包装盒礼盒插画设计产品包装袋设计 包装设计食品包装盒手提袋 包装设计插画食品袋子饮料瓶贴 手提袋食品包袋袋设计 食品包装袋包装盒设计瓶贴标签 品牌画册设计产品手册折页 宣传单/折页设计 海报产品活动招商手册宣传册折页 宣传册手册单页折页设计 宣传品设计宣传册产品排版封面三折页 PPT制作招商演讲汇 商业计划书 商务卡片设计 汇报路演PPT定制设计 形象墙设计企业墙设计文化墙设计 公司企业网站建设 响应式营销型网站定制 网站定制网站制作设计 电商网站门户网站外贸网站营销网站 极速建站工具 原生APP定制开发 APP原生开发社交电商 APP开发原生物流物联网 APP定制开发跑腿送 APP开发直播教育团购点餐外卖 商城小程序（成品版） 微信小程序定制作公众号商城 分销商城本地生活婚姻家政社区预约医疗 小程序开发商城分销教育家政公众号 小程序开发微信H5商城预约点餐物流 数据分析管理系统开发 仓储物流系统TMS/OMS/ERP 管理系统OA/CRM/ERP定制 智慧医疗软件开发 软件开发经营软件 网站UI设计 网页网站美工/APP小程序UI 游戏/APP/软件界面UI设计 APP软件界面网页网站UI设计 管理系统界面UI设计

Process finished with exit code 0
'''

# 获取多个url
it = img.items()
print(type(it))
# <class 'generator'> <--可以看见返回的是一个生成器对象
# 生成器的本质就是一迭代器，所以我们对齐进行遍历获取3
for item in it:
    img_url = item.attr("src")
    print(f"{img_url}")

