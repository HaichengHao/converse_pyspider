1.from pyquery import PyQuery
2.创建pyquary对象 -- 对象名 = PyQuary(html文件)
3. 标签名 = 对象名("css 路径")
4. 获取标文本内容
    标签名.text()(单独一个)
5.当选择器的内容很多的时候，需要一个个处理的时候,调用.items()创建生成器对象
    生成器对象名=标签名.items()
    返回的是一个生成器对象，利用遍历的方式获取其中的内容
    for item in 生成器对象名:
        print item.attr('属性名')
6.获取标签的属性信息
    标签名.attr('属性名[如获取类名就写class,获取链接就写src....]')
7.
    标签名.html() 获取的是标签中的所有html代码，而标签名.text()获取的则只是文字内容

PyQuary使用之2
1 在指定的元素前后新增属性
 source('指定元素的选择器').before("""新增的内容""")
 source('指定元素的选择器').after("""新增的内容""")
2 在指定元素的内部加新内容
source('指定元素的选择器').append("""新增的内容""")
3改写属性值
source('指定元素的选择器').attr("属性名","属性值")
4删除属性值,或删除整行html代码
source('指定元素的选择器').remove_attr("属性名","属性值")
source('指定元素的选择器').remove()


知识补充
.eq()可以对已经由css先行处理的数据中通过位置再次进行定位